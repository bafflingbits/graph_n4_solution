+ ./Singular/Singular/Singular -q --no-rc -e 2>&1 < "g43_multicolor_contradiction.s"
STDIN   1> // try to find a solution to n=4 c=3 with a non-zero multi-color edge weight
STDIN   2. // without loss of generality, choose w0101 to be non-zero
STDIN   3. // and again without loss of generality, let it equal 1
STDIN   4. // (by scaling all w01xx weights by 1/w0101 and all w23xx weights by w0101)
STDIN   5. //
STDIN   6. // this leads to a contradiction
STDIN   7. // (the ideal is {1}, so a solution would have to satisfy constraint 1 == 0)
STDIN   8. // so there are no n=4 c=3 solutions with a non-zero multi-color edge weight
STDIN   9. ring R = QQ[
STDIN  10.     w0100, w0101, w0102, w0110, w0111, w0112, w0120, w0121, w0122,
STDIN  11.     w0200, w0201, w0202, w0210, w0211, w0212, w0220, w0221, w0222,
STDIN  12.     w0300, w0301, w0302, w0310, w0311, w0312, w0320, w0321, w0322,
STDIN  13.     w1200, w1201, w1202, w1210, w1211, w1212, w1220, w1221, w1222,
STDIN  14.     w1300, w1301, w1302, w1310, w1311, w1312, w1320, w1321, w1322,
STDIN  15.     w2300, w2301, w2302, w2310, w2311, w2312, w2320, w2321, w2322];
STDIN  16> ideal I =
STDIN  17.   w0101 - 1,
STDIN  18.   w0100*w2300 + w0200*w1300 + w0300*w1200 - 1,
STDIN  19.   w0100*w2301 + w0200*w1301 + w0301*w1200,
STDIN  20.   w0100*w2302 + w0200*w1302 + w0302*w1200,
STDIN  21.   w0100*w2310 + w0201*w1300 + w0300*w1201,
STDIN  22.   w0100*w2311 + w0201*w1301 + w0301*w1201,
STDIN  23.   w0100*w2312 + w0201*w1302 + w0302*w1201,
STDIN  24.   w0100*w2320 + w0202*w1300 + w0300*w1202,
STDIN  25.   w0100*w2321 + w0202*w1301 + w0301*w1202,
STDIN  26.   w0100*w2322 + w0202*w1302 + w0302*w1202,
STDIN  27.   w0101*w2300 + w0200*w1310 + w0300*w1210,
STDIN  28.   w0101*w2301 + w0200*w1311 + w0301*w1210,
STDIN  29.   w0101*w2302 + w0200*w1312 + w0302*w1210,
STDIN  30.   w0101*w2310 + w0201*w1310 + w0300*w1211,
STDIN  31.   w0101*w2311 + w0201*w1311 + w0301*w1211,
STDIN  32.   w0101*w2312 + w0201*w1312 + w0302*w1211,
STDIN  33.   w0101*w2320 + w0202*w1310 + w0300*w1212,
STDIN  34.   w0101*w2321 + w0202*w1311 + w0301*w1212,
STDIN  35.   w0101*w2322 + w0202*w1312 + w0302*w1212,
STDIN  36.   w0102*w2300 + w0200*w1320 + w0300*w1220,
STDIN  37.   w0102*w2301 + w0200*w1321 + w0301*w1220,
STDIN  38.   w0102*w2302 + w0200*w1322 + w0302*w1220,
STDIN  39.   w0102*w2310 + w0201*w1320 + w0300*w1221,
STDIN  40.   w0102*w2311 + w0201*w1321 + w0301*w1221,
STDIN  41.   w0102*w2312 + w0201*w1322 + w0302*w1221,
STDIN  42.   w0102*w2320 + w0202*w1320 + w0300*w1222,
STDIN  43.   w0102*w2321 + w0202*w1321 + w0301*w1222,
STDIN  44.   w0102*w2322 + w0202*w1322 + w0302*w1222,
STDIN  45.   w0110*w2300 + w0210*w1300 + w0310*w1200,
STDIN  46.   w0110*w2301 + w0210*w1301 + w0311*w1200,
STDIN  47.   w0110*w2302 + w0210*w1302 + w0312*w1200,
STDIN  48.   w0110*w2310 + w0211*w1300 + w0310*w1201,
STDIN  49.   w0110*w2311 + w0211*w1301 + w0311*w1201,
STDIN  50.   w0110*w2312 + w0211*w1302 + w0312*w1201,
STDIN  51.   w0110*w2320 + w0212*w1300 + w0310*w1202,
STDIN  52.   w0110*w2321 + w0212*w1301 + w0311*w1202,
STDIN  53.   w0110*w2322 + w0212*w1302 + w0312*w1202,
STDIN  54.   w0111*w2300 + w0210*w1310 + w0310*w1210,
STDIN  55.   w0111*w2301 + w0210*w1311 + w0311*w1210,
STDIN  56.   w0111*w2302 + w0210*w1312 + w0312*w1210,
STDIN  57.   w0111*w2310 + w0211*w1310 + w0310*w1211,
STDIN  58.   w0111*w2311 + w0211*w1311 + w0311*w1211 - 1,
STDIN  59.   w0111*w2312 + w0211*w1312 + w0312*w1211,
STDIN  60.   w0111*w2320 + w0212*w1310 + w0310*w1212,
STDIN  61.   w0111*w2321 + w0212*w1311 + w0311*w1212,
STDIN  62.   w0111*w2322 + w0212*w1312 + w0312*w1212,
STDIN  63.   w0112*w2300 + w0210*w1320 + w0310*w1220,
STDIN  64.   w0112*w2301 + w0210*w1321 + w0311*w1220,
STDIN  65.   w0112*w2302 + w0210*w1322 + w0312*w1220,
STDIN  66.   w0112*w2310 + w0211*w1320 + w0310*w1221,
STDIN  67.   w0112*w2311 + w0211*w1321 + w0311*w1221,
STDIN  68.   w0112*w2312 + w0211*w1322 + w0312*w1221,
STDIN  69.   w0112*w2320 + w0212*w1320 + w0310*w1222,
STDIN  70.   w0112*w2321 + w0212*w1321 + w0311*w1222,
STDIN  71.   w0112*w2322 + w0212*w1322 + w0312*w1222,
STDIN  72.   w0120*w2300 + w0220*w1300 + w0320*w1200,
STDIN  73.   w0120*w2301 + w0220*w1301 + w0321*w1200,
STDIN  74.   w0120*w2302 + w0220*w1302 + w0322*w1200,
STDIN  75.   w0120*w2310 + w0221*w1300 + w0320*w1201,
STDIN  76.   w0120*w2311 + w0221*w1301 + w0321*w1201,
STDIN  77.   w0120*w2312 + w0221*w1302 + w0322*w1201,
STDIN  78.   w0120*w2320 + w0222*w1300 + w0320*w1202,
STDIN  79.   w0120*w2321 + w0222*w1301 + w0321*w1202,
STDIN  80.   w0120*w2322 + w0222*w1302 + w0322*w1202,
STDIN  81.   w0121*w2300 + w0220*w1310 + w0320*w1210,
STDIN  82.   w0121*w2301 + w0220*w1311 + w0321*w1210,
STDIN  83.   w0121*w2302 + w0220*w1312 + w0322*w1210,
STDIN  84.   w0121*w2310 + w0221*w1310 + w0320*w1211,
STDIN  85.   w0121*w2311 + w0221*w1311 + w0321*w1211,
STDIN  86.   w0121*w2312 + w0221*w1312 + w0322*w1211,
STDIN  87.   w0121*w2320 + w0222*w1310 + w0320*w1212,
STDIN  88.   w0121*w2321 + w0222*w1311 + w0321*w1212,
STDIN  89.   w0121*w2322 + w0222*w1312 + w0322*w1212,
STDIN  90.   w0122*w2300 + w0220*w1320 + w0320*w1220,
STDIN  91.   w0122*w2301 + w0220*w1321 + w0321*w1220,
STDIN  92.   w0122*w2302 + w0220*w1322 + w0322*w1220,
STDIN  93.   w0122*w2310 + w0221*w1320 + w0320*w1221,
STDIN  94.   w0122*w2311 + w0221*w1321 + w0321*w1221,
STDIN  95.   w0122*w2312 + w0221*w1322 + w0322*w1221,
STDIN  96.   w0122*w2320 + w0222*w1320 + w0320*w1222,
STDIN  97.   w0122*w2321 + w0222*w1321 + w0321*w1222,
STDIN  98.   w0122*w2322 + w0222*w1322 + w0322*w1222 - 1;
STDIN  99> option(redSB);
STDIN 100> option(prot);
STDIN 101> ideal I2 = slimgb(I);
2M[81:0,81](648)3M[100:547,100](2061)3M[100:448,100](3833)3M[100:348,100](5768)3M[100:248,100](7465)3M[100:148,100](9490)3M[100:48,100](11436)3M[48:0,48](12558)4M[100:11132,100](16143)4M[100:11032,74](19655)4M[100:10932,78](24730)4M[100:10832,bb97](28400)4M[100:10732,bb100](32116)4M[100:10632,100](36030)4M[100:10532,22](36949)4M[100:10432,22](38348)4M[100:10332,100](43891)4M[100:10232,bbbbb100](49037)4M[100:10132,71](52215)4M[100:10032,bbbbbbbbbbbbbbb72](54411)4M[100:9932,bbbb100](57770)4M[100:9832,bbbbbbbbbbbbbbb100](61902)4M[100:9732,bbbbbb88](65942)4M[100:9632,6](66245)4M[100:9532,6](66405)4M[100:9432,36](67965)4M[100:9332,b100](74004)4M[100:9232,bbb100](79575)4M[100:9132,b100](84289)4M[100:9032,57](86796)4M[100:8932,44](88945)4M[100:8832,bbbbbbbbbb64](91533)4M[100:8732,bbbbbbbbbb49](93150)4M[100:8632,bbbbbbbbbbbbbbbbbbbbbbbbb94](96225)4M[100:8532,bbbbb100](99934)4M[100:8521,98](105142)3M[28:0,28](107171)3M[11:0,11](108309)4M[100:9267,eeee75](113447)3M[36:0,36](116110)4M[100:9972,74](120597)3M[56:0,e56](124737)3M[2:0,2](124986)3M[100:11,100](130912)3M[42:0,eeeeeeeeeeeeeeeeee29](133708)4M[100:14023,eb84](139775)4M[100:13945,eee100](145617)3M[9:0,9](147411)4M[100:14149,eeeeeeeeeeeeeeeeeeeeee65](151605)3M[17:0,16](153480)4M[100:14021,bbbeeeeeeeeee70](156296)3M[15:0,bbb12](156902)4M[100:13825,ebbbbbbbeeb82](160271)3M[11:0,11](160380)3M[1:0,1](160430)4M[100:13734,eeebbbeeebeeeeeeeeeeeeee81](164584)3M[13:0,13](165861)4M[100:13883,eeeeeeeeeee87](174111)3M[22:0,bbb22](175972)3M[16:0,16](176771)3M[75:0,75](181159)3M[17:0,eee14](182294)4M[100:16275,eeeeeee75](185901)3M[10:0,10](186898)4M[100:16065,eeeeeeeeeeeeeeee78](190897)3M[7:0,7](191383)4M[100:15812,beeeeeeeeeeeeeeebbbeeeeeeebb73](193651)3M[4:0,bbb1](193719)4M[100:15765,eebbbeeeee88](197649)3M[1:0,1](197612)4M[100:15842,100](199635)4M[100:15605,eeeeeeeeee76](203248)4M[100:15442,eeeeeeeeeeeeeeeeeeeee36](205285)4M[100:15112,eeeeeeeeeeeeeeeeeeeeeeeeeee66](209257)3M[40:0,beee37](211173)3M[27:0,eeeeee20](212567)2M[6:0,6](213034)3M[34:0,25](214831)3M[7:0,7](215401)4M[100:17542,eeeeeeeeeeeeeeeeeb75](219558)3M[23:0,23](221470)3M[1:0,1](221518)3M[8:0,8](221923)4M[100:16617,eeeeeeeeeeb78](225294)3M[42:0,eee38](227293)2M[6:0,6](227935)3M[3:0,3](228024)4M[100:17101,79](230390)4M[100:16418,100](236188)3M[49:0,bb49](239559)4M[100:17643,eeeeeeeeeee87](245692)3M[22:0,22](247784)4M[100:16752,92](255312)3M[91:0,bbbbbbe90](263660)4M[100:19378,bbeebeebbbbbbbbbb74](270635)3M[56:0,55](276015)4M[100:20827,eebbbbbeebeeeee73](280104)3M[8:0,8](280745)4M[100:20340,beeeeeeeee84](289750)3M[19:0,bbebbb17](290694)2M[1:0,1](290753)3M[16:0,bbb13](292213)3M[7:0,7](293211)2M[4:0,4](293476)3M[33:0,bb28](296769)4M[100:21800,eeeeeeeebbbbbbbbeeeeebe73](304551)3M[42:0,40](306899)3M[1:0,1](306841)3M[5:0,5](307349)4M[100:23233,eeeeeeeeeeeeeebbbbbeeeeeeeebbbb42](312057)3M[30:0,eeeeeee28](314203)4M[100:25235,bb96](318310)3M[20:0,19](320047)3M[1:0,1](320051)4M[100:22081,eeeebbbbbbbbeeebbbbbb52](321368)3M[23:0,23](323359)3M[1:0,1](323469)4M[100:10930,eeeeeeeeeeeebbebeebbbbbbe62](315739)3M[38:0,37](316885)3M[16:0,16](319212)2M[12:0,12](320100)3M[15:0,11](320812)2M[2:0,1](320188)
NF:7831 product criterion:14010406, ext_product criterion:392310 
[65535:14]s
(S:0)
STDIN 102> I2;
I2[1]=1
max memory(KB):98008  time(sec):5.21 = 0:05.21
